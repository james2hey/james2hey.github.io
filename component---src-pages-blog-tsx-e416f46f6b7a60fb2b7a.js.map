{"version":3,"sources":["webpack:///./src/assets/images/profile-picture.jpg","webpack:///./src/components/blog/blog-title.tsx","webpack:///./src/components/blog/blog-feed-item.tsx","webpack:///./src/components/blog/blog-feed.tsx","webpack:///./src/pages/blog.tsx","webpack:///./src/components/subcomponents/profile-picture.tsx"],"names":["module","exports","BlogTitle","className","to","size","ProfilePictureSize","SMALL","BlogFeedItem","props","id","title","excerpt","date","path","key","BlogFeed","posts","allMarkdownRemark","edges","filter","post","node","frontmatter","length","map","BlogPage","data","pageQuery","ProfilePicture","src","profileImage","alt","toString"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,+D,0ICK9BC,EAAY,WACvB,OACE,yBAAKC,UAAW,cACd,yBAAKA,UAAW,oBACd,4BACE,kBAAC,OAAD,CAAMC,GAAI,IAAKD,UAAW,uBAA1B,gBADF,MAE0B,0BAAMA,UAAW,aAAjB,SAE1B,wBAAIA,UAAW,0BAAf,yCAEF,kBAAC,IAAD,CAAgBE,KAAMC,IAAmBC,UCHlCC,G,oBAA4C,SAAAC,GAAS,IACxDC,EAAmCD,EAAnCC,GAAIC,EAA+BF,EAA/BE,MAAOC,EAAwBH,EAAxBG,QAASC,EAAeJ,EAAfI,KAAMC,EAASL,EAATK,KAClC,OACE,yBAAKX,UAAU,iBAAiBY,IAAKL,GACnC,wBAAIP,UAAW,yBACb,kBAAC,OAAD,CAAMC,GAAIU,GAAOH,IAEnB,wBAAIR,UAAW,wBAAyBU,GACxC,2BAAID,MCCGI,EAAoC,SAAC,GAA0B,IAC3DC,EAD2D,EAAxBC,kBAC1CC,MACR,OACE,yBAAKhB,UAAU,aACZc,EACEG,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYZ,MAAMa,OAAS,KACpDC,KAAI,YAAoB,IAAXJ,EAAW,EAAjBC,KACN,OACI,kBAAC,EAAD,CACEZ,GAAIW,EAAKX,GACTC,MAAOU,EAAKE,YAAYZ,MACxBC,QAASS,EAAKT,QACdC,KAAMQ,EAAKE,YAAYV,KACvBC,KAAMO,EAAKE,YAAYT,YClCvC,mFA0BO,IAAMY,EAA+C,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACpCA,EAAKT,kBAAtBC,MACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKR,MAAM,SACX,yBAAKR,UAAW,aACd,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUe,kBAAmBS,EAAKT,uBAM7BU,EAAY,aAkBVF,a,8HCpDHpB,E,gEAAAA,K,cAAAA,E,gBAAAA,E,eAAAA,M,KAUL,IAAMuB,EAAgD,SAAC,GAAa,IAAXxB,EAAW,EAAXA,KAC9D,OAAO,yBACLyB,IAAKC,IAAcC,IAAG,kBACtB7B,UAAS,oCAAsCE,EAAK4B","file":"component---src-pages-blog-tsx-e416f46f6b7a60fb2b7a.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/profile-picture-1ae1395ae4a376eadd4644fcc0d74f27.jpg\";","import React from 'react';\r\nimport '../../scss/blog/_blog-title.scss';\r\nimport { Link } from \"gatsby\";\r\nimport { ProfilePicture, ProfilePictureSize } from \"../subcomponents/profile-picture\";\r\n\r\nexport const BlogTitle = () => {\r\n  return (\r\n    <div className={'blog-title'}>\r\n      <div className={'blog-title__left'}>\r\n        <h1>\r\n          <Link to={'/'} className={'blog-title__heading'}>\r\n            James Toohey</Link> - <span className={\"highlight\"}>Blog</span>\r\n        </h1>\r\n        <h4 className={'blog-title__subheading'}>A Software Engineer from New Zealand</h4>\r\n      </div>\r\n      <ProfilePicture size={ProfilePictureSize.SMALL}/>\r\n    </div>\r\n  )\r\n};\r\n","import React from 'react';\r\nimport '../../scss/blog/_blog-feed-item.scss'\r\nimport { Link } from \"gatsby\";\r\n\r\nexport interface BlogFeedItemProps {\r\n  id: string;\r\n  title: string;\r\n  excerpt: string;\r\n  date: string;\r\n  path: string;\r\n}\r\n\r\nexport const BlogFeedItem: React.FC<BlogFeedItemProps> = props => {\r\n  const { id, title, excerpt, date, path } = props;\r\n  return (\r\n    <div className=\"blog-feed-item\" key={id}>\r\n      <h1 className={'blog-feed-item__title'}>\r\n        <Link to={path}>{title}</Link>\r\n      </h1>\r\n      <h3 className={'blog-feed-item__date'}>{date}</h3>\r\n      <p>{excerpt}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport '../../scss/blog/_blog-feed.scss';\r\nimport { Link } from \"gatsby\";\r\nimport { BlogFeedItem } from \"./blog-feed-item\";\r\n\r\nexport interface BlogFeedProps {\r\n  allMarkdownRemark: {\r\n    edges: [{\r\n      node: {\r\n        id: string;\r\n        excerpt: string;\r\n        frontmatter: {\r\n          title: string;\r\n          date: string;\r\n          path: string;\r\n        }\r\n      }\r\n    }]\r\n  }\r\n}\r\n\r\nexport const BlogFeed: React.FC<BlogFeedProps> = ({ allMarkdownRemark }) => {\r\n  const { edges: posts } = allMarkdownRemark;\r\n  return (\r\n    <div className=\"blog-feed\">\r\n      {posts\r\n        .filter(post => post.node.frontmatter.title.length > 0)\r\n        .map(({ node: post }) => {\r\n          return (\r\n              <BlogFeedItem\r\n                id={post.id}\r\n                title={post.frontmatter.title}\r\n                excerpt={post.excerpt}\r\n                date={post.frontmatter.date}\r\n                path={post.frontmatter.path}/>\r\n          );\r\n        })}\r\n    </div>\r\n  )\r\n};\r\n","import \"../scss/blog/_blog-post.scss\";\r\nimport { graphql, Link, PageProps } from \"gatsby\";\r\nimport React from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\nimport { ProfilePicture, ProfilePictureSize } from \"../components/subcomponents/profile-picture\";\r\nimport { BlogTitle } from \"../components/blog/blog-title\";\r\nimport { BlogFeed } from \"../components/blog/blog-feed\";\r\n\r\ninterface BlogPageProps {\r\n  allMarkdownRemark: {\r\n    edges: [{\r\n      node: {\r\n        id: string;\r\n        excerpt: string;\r\n        frontmatter: {\r\n          title: string;\r\n          date: string;\r\n          path: string;\r\n        }\r\n      }\r\n    }]\r\n  }\r\n}\r\n\r\n\r\nexport const BlogPage: React.FC<PageProps<BlogPageProps>> = ({ data }) => {\r\n  const { edges: posts } = data.allMarkdownRemark;\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Blog\" />\r\n      <div className={\"blog-post\"}>\r\n        <BlogTitle />\r\n        <BlogFeed allMarkdownRemark={data.allMarkdownRemark}/>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query IndexQuery {\r\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 250)\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            path\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BlogPage;\r\n","import React from \"react\";\r\nimport '../../scss/subcomponents/_profile-picture.scss'\r\nimport profileImage from \"../../assets/images/profile-picture.jpg\";\r\n\r\n\r\nexport enum ProfilePictureSize {\r\n  SMALL = 'small',\r\n  MEDIUM = 'medium',\r\n  LARGE = 'large',\r\n}\r\n\r\nexport interface ProfilePictureProps {\r\n  size: ProfilePictureSize;\r\n}\r\n\r\nexport const ProfilePicture: React.FC<ProfilePictureProps> = ({ size }) => {\r\n  return <img\r\n    src={profileImage} alt={`profile picture`}\r\n    className={`profile-picture profile-picture--${size.toString()}`} />\r\n};\r\n"],"sourceRoot":""}
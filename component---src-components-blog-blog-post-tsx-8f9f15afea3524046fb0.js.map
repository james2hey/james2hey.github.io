{"version":3,"sources":["webpack:///./src/components/blog/blog-post.tsx"],"names":["pageQuery","BlogPost","post","data","markdownRemark","hideNav","title","frontmatter","className","dangerouslySetInnerHTML","__html","html","to"],"mappings":"2FAAA,0HAiCaA,EAAY,YAaVC,UA9BsC,SAAC,GAAa,IACzCC,EADyC,EAAXC,KAC9CC,eACR,OACE,kBAAC,IAAD,CAAQC,SAAS,GACf,kBAAC,IAAD,CAAKC,MAAOJ,EAAKK,YAAYD,QAC7B,yBAAKE,UAAU,aACb,wBAAIA,UAAW,sBAAuBN,EAAKK,YAAYD,OACvD,yBACEE,UAAU,qBACVC,wBAAyB,CAAEC,OAAQR,EAAKS,SAG5C,kBAAC,OAAD,CAAMC,GAAI,QAASJ,UAAW,mBAA9B","file":"component---src-components-blog-blog-post-tsx-8f9f15afea3524046fb0.js","sourcesContent":["import React from \"react\";\r\nimport { graphql, Link, PageProps } from \"gatsby\";\r\nimport \"../../scss/blog/_blog-post.scss\";\r\nimport Layout from \"../layout\";\r\nimport SEO from \"../seo\";\r\n\r\ninterface BlogPostProps {\r\n  markdownRemark: any;\r\n}\r\n\r\n/**\r\n * This is directly used by gatsby-node.js to resolve pages e.g.\r\n * `const BlogPost = path.resolve(`src/components/blog/blog-post.tsx`);`\r\n * @param data\r\n * @constructor\r\n */\r\nconst BlogPost: React.FC<PageProps<BlogPostProps>> = ({ data }) => {\r\n  const { markdownRemark: post } = data;\r\n  return (\r\n    <Layout hideNav={true}>\r\n      <SEO title={post.frontmatter.title} />\r\n      <div className=\"blog-post\">\r\n        <h1 className={'blog-post__heading'}>{post.frontmatter.title}</h1>\r\n        <div\r\n          className=\"blog-post__content\"\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n        />\r\n      </div>\r\n      <Link to={'/blog'} className={'blog-post__back'}>{`< Back`}</Link>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n      query BlogPostByPath($path: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        path\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BlogPost;\r\n"],"sourceRoot":""}
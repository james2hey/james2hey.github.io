{"version":3,"file":"component---src-pages-blog-tsx-fb18bc7fa58deb6f7a71.js","mappings":"sKA6CA,UA9BqD,SAAC,GAAc,IAC1CA,EADyC,EAAXC,KAC9CC,eACR,OACE,gBAAC,IAAD,CAAQC,SAAS,GACf,gBAAC,IAAD,CAAKC,MAAOJ,EAAKK,YAAYD,QAC7B,uBAAKE,UAAU,aACb,sBAAIA,UAAW,sBAAuBN,EAAKK,YAAYD,OACvD,uBACEE,UAAU,qBACVC,wBAAyB,CAAEC,OAAQR,EAAKS,SAG5C,gBAAC,EAAAC,KAAD,CAAMC,GAAI,QAASL,UAAW,mBAA9B,a,gFCvBMM,E,UCJZ,EAAe,IAA0B,wDDIzC,SAAYA,GAAAA,EAAAA,MAAAA,QAAAA,EAAAA,OAAAA,SAAAA,EAAAA,MAAAA,QAAZ,CAAYA,IAAAA,EAAAA,KAUL,IAAMC,EAAgD,SAAC,GAAa,EAAXC,KAC9D,OACI,uBAAKR,UAAU,mBACb,uBACIS,IAAKC,EACLC,IAAG,kBACHX,UAAU,8B,gKEhBTY,EAAY,WACvB,OACE,uBAAKZ,UAAW,cACd,uBAAKA,UAAW,oBACd,0BACE,gBAAC,EAAAI,KAAD,CAAMC,GAAI,IAAKL,UAAW,uBAA1B,gBADF,MAE0B,wBAAMA,UAAW,aAAjB,SAE1B,sBAAIA,UAAW,0BAAf,yCAEF,gBAAC,IAAD,CAAgBQ,KAAMF,EAAAA,EAAAA,UCHfO,EAA4C,SAAAC,GACvD,IAAQC,EAAmCD,EAAnCC,GAAIjB,EAA+BgB,EAA/BhB,MAAOkB,EAAwBF,EAAxBE,QAASC,EAAeH,EAAfG,KAAMC,EAASJ,EAATI,KAClC,OACE,uBAAKlB,UAAU,iBAAiBmB,IAAKJ,GACnC,sBAAIf,UAAW,yBACb,gBAAC,EAAAI,KAAD,CAAMC,GAAIa,GAAOpB,IAEnB,sBAAIE,UAAW,wBAAyBiB,GACxC,yBAAID,KCCGI,EAAoC,SAAC,GAA2B,IAC5DC,EAD2D,EAAxBC,kBAC1CC,MACR,OACE,uBAAKvB,UAAU,aACZqB,EACEG,QAAO,SAAA9B,GAAI,OAAIA,EAAK+B,KAAK1B,YAAYD,MAAM4B,OAAS,KACpDC,KAAI,YAAqB,IAAZjC,EAAW,EAAjB+B,KACN,OACE,gBAACZ,EAAD,CACEE,GAAIrB,EAAKqB,GACTjB,MAAOJ,EAAKK,YAAYD,MACxBkB,QAAStB,EAAKsB,QACdC,KAAMvB,EAAKK,YAAYkB,KACvBC,KAAMxB,EAAKK,YAAYmB,YCVxBU,EAA+C,SAAC,GAAc,IAAZjC,EAAW,EAAXA,KACpCA,EAAK2B,kBAAtBC,MACR,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKzB,MAAM,SACX,uBAAKE,UAAW,aACd,gBAACY,EAAD,MACA,gBAACQ,EAAD,CAAUE,kBAAmB3B,EAAK2B,uBAwB1C","sources":["webpack://james-toohey/./src/components/blog/blog-post.tsx","webpack://james-toohey/./src/components/subcomponents/profile-picture.tsx","webpack://james-toohey/./src/assets/images/portrait.jpg","webpack://james-toohey/./src/components/blog/blog-title.tsx","webpack://james-toohey/./src/components/blog/blog-feed-item.tsx","webpack://james-toohey/./src/components/blog/blog-feed.tsx","webpack://james-toohey/./src/pages/blog.tsx"],"sourcesContent":["import React from 'react'\nimport { graphql, Link, PageProps } from 'gatsby'\nimport Layout from '../layout'\nimport SEO from '../seo'\n\ninterface BlogPostProps {\n  markdownRemark: any;\n}\n\n/**\n * This is directly used by gatsby-node.js to resolve pages e.g.\n * `const BlogPost = path.resolve(`src/components/blog/blog-post.tsx`);`\n * @param data\n * @constructor\n */\nconst BlogPost: React.FC<PageProps<BlogPostProps>> = ({ data }) => {\n  const { markdownRemark: post } = data\n  return (\n    <Layout hideNav={true}>\n      <SEO title={post.frontmatter.title}/>\n      <div className=\"blog-post\">\n        <h1 className={'blog-post__heading'}>{post.frontmatter.title}</h1>\n        <div\n          className=\"blog-post__content\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        />\n      </div>\n      <Link to={'/blog'} className={'blog-post__back'}>{`< Back`}</Link>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n      query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`\n\nexport default BlogPost\n","import React from 'react'\nimport profileImage from '../../assets/images/portrait.jpg'\n\n\nexport enum ProfilePictureSize {\n  SMALL = 'small',\n  MEDIUM = 'medium',\n  LARGE = 'large',\n}\n\nexport interface ProfilePictureProps {\n  size: ProfilePictureSize;\n}\n\nexport const ProfilePicture: React.FC<ProfilePictureProps> = ({ size }) => {\n  return (\n      <div className=\"profile-picture\">\n        <img\n            src={profileImage}\n            alt={`profile picture`}\n            className=\"profile-picture__image\"\n        />\n      </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/portrait-7496f927ce8a5b4f2b110551cb8fb6e3.jpg\";","import React from 'react'\nimport { Link } from 'gatsby'\nimport { ProfilePicture, ProfilePictureSize } from '../subcomponents/profile-picture'\n\nexport const BlogTitle = () => {\n  return (\n    <div className={'blog-title'}>\n      <div className={'blog-title__left'}>\n        <h1>\n          <Link to={'/'} className={'blog-title__heading'}>\n            James Toohey</Link> - <span className={'highlight'}>Blog</span>\n        </h1>\n        <h4 className={'blog-title__subheading'}>A Software Engineer from New Zealand</h4>\n      </div>\n      <ProfilePicture size={ProfilePictureSize.SMALL}/>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport interface BlogFeedItemProps {\n  id: string;\n  title: string;\n  excerpt: string;\n  date: string;\n  path: string;\n}\n\nexport const BlogFeedItem: React.FC<BlogFeedItemProps> = props => {\n  const { id, title, excerpt, date, path } = props\n  return (\n    <div className=\"blog-feed-item\" key={id}>\n      <h1 className={'blog-feed-item__title'}>\n        <Link to={path}>{title}</Link>\n      </h1>\n      <h3 className={'blog-feed-item__date'}>{date}</h3>\n      <p>{excerpt}</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport '../../scss/blog/blog-feed.scss'\nimport { BlogFeedItem } from './blog-feed-item'\n\nexport interface BlogFeedProps {\n  allMarkdownRemark: {\n    edges: [{\n      node: {\n        id: string;\n        excerpt: string;\n        frontmatter: {\n          title: string;\n          date: string;\n          path: string;\n        }\n      }\n    }]\n  }\n}\n\nexport const BlogFeed: React.FC<BlogFeedProps> = ({ allMarkdownRemark }) => {\n  const { edges: posts } = allMarkdownRemark\n  return (\n    <div className=\"blog-feed\">\n      {posts\n        .filter(post => post.node.frontmatter.title.length > 0)\n        .map(({ node: post }) => {\n          return (\n            <BlogFeedItem\n              id={post.id}\n              title={post.frontmatter.title}\n              excerpt={post.excerpt}\n              date={post.frontmatter.date}\n              path={post.frontmatter.path}/>\n          )\n        })}\n    </div>\n  )\n}\n","import { graphql, PageProps } from 'gatsby'\nimport React from 'react'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { BlogFeed, BlogTitle } from '../components/blog'\n\ninterface BlogPageProps {\n  allMarkdownRemark: {\n    edges: [{\n      node: {\n        id: string;\n        excerpt: string;\n        frontmatter: {\n          title: string;\n          date: string;\n          path: string;\n        }\n      }\n    }]\n  }\n}\n\n\nexport const BlogPage: React.FC<PageProps<BlogPageProps>> = ({ data }) => {\n  const { edges: posts } = data.allMarkdownRemark;\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <div className={\"blog-post\"}>\n        <BlogTitle />\n        <BlogFeed allMarkdownRemark={data.allMarkdownRemark}/>\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogPage;\n"],"names":["post","data","markdownRemark","hideNav","title","frontmatter","className","dangerouslySetInnerHTML","__html","html","Link","to","ProfilePictureSize","ProfilePicture","size","src","profileImage","alt","BlogTitle","BlogFeedItem","props","id","excerpt","date","path","key","BlogFeed","posts","allMarkdownRemark","edges","filter","node","length","map","BlogPage"],"sourceRoot":""}
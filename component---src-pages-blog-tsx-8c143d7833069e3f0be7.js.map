{"version":3,"sources":["webpack:///./src/assets/images/profile-picture.jpg","webpack:///./src/components/blog/blog-title.tsx","webpack:///./src/components/blog/blog-feed-item.tsx","webpack:///./src/components/blog/blog-feed.tsx","webpack:///./src/pages/blog.tsx","webpack:///./src/components/subcomponents/profile-picture.tsx"],"names":["module","exports","BlogTitle","className","to","size","ProfilePictureSize","SMALL","BlogFeedItem","props","id","title","excerpt","date","path","key","BlogFeed","posts","allMarkdownRemark","edges","filter","post","node","frontmatter","length","map","BlogPage","data","pageQuery","ProfilePicture","src","profileImage","alt","toString"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,+D,0ICK9BC,EAAY,WACvB,OACE,yBAAKC,UAAW,cACd,yBAAKA,UAAW,oBACd,4BACE,kBAAC,OAAD,CAAMC,GAAI,IAAKD,UAAW,uBAA1B,gBADF,MAE0B,0BAAMA,UAAW,aAAjB,SAE1B,0EAEF,kBAAC,IAAD,CAAgBE,KAAMC,IAAmBC,UCHlCC,G,oBAA4C,SAAAC,GAAS,IACxDC,EAAmCD,EAAnCC,GAAIC,EAA+BF,EAA/BE,MAAOC,EAAwBH,EAAxBG,QAASC,EAAeJ,EAAfI,KAAMC,EAASL,EAATK,KAClC,OACE,yBAAKX,UAAU,iBAAiBY,IAAKL,GACnC,4BACE,kBAAC,OAAD,CAAMN,GAAIU,GAAOH,IAEnB,4BAAKE,GACL,2BAAID,MCCGI,EAAoC,SAAC,GAA0B,IAC3DC,EAD2D,EAAxBC,kBAC1CC,MACR,OACE,yBAAKhB,UAAU,aACZc,EACEG,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYZ,MAAMa,OAAS,KACpDC,KAAI,YAAoB,IAAXJ,EAAW,EAAjBC,KACN,OACI,kBAAC,EAAD,CACEZ,GAAIW,EAAKX,GACTC,MAAOU,EAAKE,YAAYZ,MACxBC,QAASS,EAAKT,QACdC,KAAMQ,EAAKE,YAAYV,KACvBC,KAAMO,EAAKE,YAAYT,YClCvC,mFA0BO,IAAMY,EAA+C,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACpCA,EAAKT,kBAAtBC,MACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKR,MAAM,SACX,yBAAKR,UAAW,aACd,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUe,kBAAmBS,EAAKT,uBAM7BU,EAAY,aAkBVF,a,8HCpDHpB,E,gEAAAA,K,cAAAA,E,gBAAAA,E,eAAAA,M,KAUL,IAAMuB,EAAgD,SAAC,GAAa,IAAXxB,EAAW,EAAXA,KAC9D,OAAO,yBACLyB,IAAKC,IAAcC,IAAG,kBACtB7B,UAAS,oCAAsCE,EAAK4B","file":"component---src-pages-blog-tsx-8c143d7833069e3f0be7.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/profile-picture-1ae1395ae4a376eadd4644fcc0d74f27.jpg\";","import React from 'react';\nimport '../../scss/blog/_blog-title.scss';\nimport { Link } from \"gatsby\";\nimport { ProfilePicture, ProfilePictureSize } from \"../subcomponents/profile-picture\";\n\nexport const BlogTitle = () => {\n  return (\n    <div className={'blog-title'}>\n      <div className={'blog-title__left'}>\n        <h1>\n          <Link to={'/'} className={'blog-title__heading'}>\n            James Toohey</Link> - <span className={\"highlight\"}>Blog</span>\n        </h1>\n        <h4>A software engineer from New Zealand ðŸ‡³ðŸ‡¿</h4>\n      </div>\n      <ProfilePicture size={ProfilePictureSize.SMALL}/>\n    </div>\n  )\n};\n","import React from 'react';\nimport '../../scss/blog/_blog-feed-item.scss'\nimport { Link } from \"gatsby\";\n\nexport interface BlogFeedItemProps {\n  id: string;\n  title: string;\n  excerpt: string;\n  date: string;\n  path: string;\n}\n\nexport const BlogFeedItem: React.FC<BlogFeedItemProps> = props => {\n  const { id, title, excerpt, date, path } = props;\n  return (\n    <div className=\"blog-feed-item\" key={id}>\n      <h1>\n        <Link to={path}>{title}</Link>\n      </h1>\n      <h3>{date}</h3>\n      <p>{excerpt}</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport '../../scss/blog/_blog-feed.scss';\nimport { Link } from \"gatsby\";\nimport { BlogFeedItem } from \"./blog-feed-item\";\n\nexport interface BlogFeedProps {\n  allMarkdownRemark: {\n    edges: [{\n      node: {\n        id: string;\n        excerpt: string;\n        frontmatter: {\n          title: string;\n          date: string;\n          path: string;\n        }\n      }\n    }]\n  }\n}\n\nexport const BlogFeed: React.FC<BlogFeedProps> = ({ allMarkdownRemark }) => {\n  const { edges: posts } = allMarkdownRemark;\n  return (\n    <div className=\"blog-feed\">\n      {posts\n        .filter(post => post.node.frontmatter.title.length > 0)\n        .map(({ node: post }) => {\n          return (\n              <BlogFeedItem\n                id={post.id}\n                title={post.frontmatter.title}\n                excerpt={post.excerpt}\n                date={post.frontmatter.date}\n                path={post.frontmatter.path}/>\n          );\n        })}\n    </div>\n  )\n};\n","import \"../scss/blog/_blog-post.scss\";\nimport { graphql, Link, PageProps } from \"gatsby\";\nimport React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { ProfilePicture, ProfilePictureSize } from \"../components/subcomponents/profile-picture\";\nimport { BlogTitle } from \"../components/blog/blog-title\";\nimport { BlogFeed } from \"../components/blog/blog-feed\";\n\ninterface BlogPageProps {\n  allMarkdownRemark: {\n    edges: [{\n      node: {\n        id: string;\n        excerpt: string;\n        frontmatter: {\n          title: string;\n          date: string;\n          path: string;\n        }\n      }\n    }]\n  }\n}\n\n\nexport const BlogPage: React.FC<PageProps<BlogPageProps>> = ({ data }) => {\n  const { edges: posts } = data.allMarkdownRemark;\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <div className={\"blog-post\"}>\n        <BlogTitle />\n        <BlogFeed allMarkdownRemark={data.allMarkdownRemark}/>\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogPage;\n","import React from \"react\";\nimport '../../scss/subcomponents/_profile-picture.scss'\nimport profileImage from \"../../assets/images/profile-picture.jpg\";\n\n\nexport enum ProfilePictureSize {\n  SMALL = 'small',\n  MEDIUM = 'medium',\n  LARGE = 'large',\n}\n\nexport interface ProfilePictureProps {\n  size: ProfilePictureSize;\n}\n\nexport const ProfilePicture: React.FC<ProfilePictureProps> = ({ size }) => {\n  return <img\n    src={profileImage} alt={`profile picture`}\n    className={`profile-picture profile-picture--${size.toString()}`} />\n};\n"],"sourceRoot":""}